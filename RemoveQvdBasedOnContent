# Define the path to the QVD file
$qvdFilePath = "path\to\your\file.qvd"
$nodeValueToCheck = "_Outdated"

try {
    # Create an XmlReaderSettings object with appropriate settings
    $settings = New-Object System.Xml.XmlReaderSettings

    # Create an XmlReader object with the settings
    $reader = [System.Xml.XmlReader]::Create($qvdFilePath, $settings)

    # Move to the content of the file
    $reader.MoveToContent()

    # Read through the XML until you find the QvdTableHeader element
    if ($reader.ReadToFollowing('QvdTableHeader')) {
        # Then read to the Fields element within QvdTableHeader
        if ($reader.ReadToDescendant('Fields')) {
            # Then read to the QvdFieldHeader element within Fields
            if ($reader.ReadToDescendant('QvdFieldHeader')) {
                # Then read to the FieldName element within QvdFieldHeader
                do {
                    if ($reader.ReadToFollowing('FieldName')) {
                        $nodeValue = $reader.ReadElementContentAsString()
                        if ($nodeValue -eq $nodeValueToCheck) {
                            # Dispose of the reader before deleting the file
                            $reader.Dispose()
                            
                            # Delete the file
                            Remove-Item $qvdFilePath -Force
                            Write-Output "File removed because the specified value was found."
                            break
                        }
                    }
                } while ($reader.ReadToNextSibling('QvdFieldHeader'))
            }
        }
    }
} catch {
    Write-Output "An error occurred: $_"
} finally {
    # Dispose of the reader if it hasn't been disposed of already
    if ($reader -ne $null) {
        $reader.Dispose()
    }
}
